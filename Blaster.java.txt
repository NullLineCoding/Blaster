/*
 * Blaster-simple vector shoot 'em up
 */
package com.blaster.nulllinecoding;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.SwingUtilities;

public class Blaster extends JPanel {

	// constants
	public static final int SCREEN_WIDTH = 640;
	public static final int SCREEN_HEIGHT = 480;
	// just a test shape to draw before we add the polygons(ship,bullets etc)
	private int rectXPos = 320;
	private int rectYpos = 240;
	private final int rectWidth = 30;
	private final int rectHeight = 10;

	/*
	 * constructor for the Blaster class.The game loop will also be in here
	 */
	public Blaster() {

		setPreferredSize(new Dimension(SCREEN_WIDTH, SCREEN_HEIGHT));
		// add keylistener
		// add gameStart() method which will create a thread that contains
		// gameloop()
	}

	/*
	 * override the paint method here, put code in for drawing of ships,bullets
	 * etc into a method
	 */
	@Override
	public void paintComponent(Graphics g) {
		super.paintComponent(g);
		setBackground(Color.BLACK);
		g.setColor(Color.RED);
		g.drawRect(rectXPos, rectYpos, rectWidth, rectHeight);
		g.fillRect(rectXPos, rectYpos, rectWidth, rectHeight);
	}

	public static void main(String[] args) {
		/*
		 * Event Dispatching Thread,because bad things can happen....
		 */
		SwingUtilities.invokeLater(new Runnable() {
			public void run() {
				JFrame frame = new JFrame("Blaster");
				frame.setContentPane(new Blaster());
				frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
				frame.pack();
				frame.setLocationRelativeTo(null);
				frame.setVisible(true);
			}
		});
	}// end main

}// end class